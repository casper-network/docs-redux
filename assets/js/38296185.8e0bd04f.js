"use strict";(self.webpackChunkcspr_docs=self.webpackChunkcspr_docs||[]).push([[22743],{42311:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var r=n(74848),c=n(28453);const o={},t="E",i={id:"concepts/glossary/E",title:"E",description:"---",source:"@site/docs/concepts/glossary/E.md",sourceDirName:"concepts/glossary",slug:"/concepts/glossary/E",permalink:"/docs-redux/concepts/glossary/E",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"concepts",previous:{title:"D",permalink:"/docs-redux/concepts/glossary/D"},next:{title:"F",permalink:"/docs-redux/concepts/glossary/F"}},a={},d=[{value:"Ecosystem",id:"ecosystem",level:2},{value:"Entry point",id:"entry-point",level:2},{value:"Equivocation",id:"equivocation",level:2},{value:"Era",id:"era",level:2},{value:"Eviction",id:"eviction",level:2},{value:"External client",id:"external-client",level:2}];function l(e){const s={a:"a",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"e",children:"E"})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"/docs-redux/concepts/glossary/A",children:"A"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/concepts/glossary/B",children:"B"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/concepts/glossary/C",children:"C"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/concepts/glossary/D",children:"D"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/concepts/glossary/E",children:"E"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/concepts/glossary/F",children:"F"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/concepts/glossary/G",children:"G"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/concepts/glossary/H",children:"H"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/concepts/glossary/I",children:"I"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/concepts/glossary/J",children:"J"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/concepts/glossary/K",children:"K"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/concepts/glossary/L",children:"L"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/concepts/glossary/M",children:"M"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/concepts/glossary/N",children:"N"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/concepts/glossary/O",children:"O"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/concepts/glossary/P",children:"P"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/concepts/glossary/Q",children:"Q"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/concepts/glossary/R",children:"R"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/concepts/glossary/S",children:"S"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/concepts/glossary/T",children:"T"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/concepts/glossary/U",children:"U"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/concepts/glossary/V",children:"V"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/concepts/glossary/W",children:"W"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/concepts/glossary/X",children:"X"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/concepts/glossary/Y",children:"Y"})," ",(0,r.jsx)(s.a,{href:"/docs-redux/concepts/glossary/Z",children:"Z"})]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"ecosystem",children:"Ecosystem"}),"\n",(0,r.jsx)(s.p,{children:"The ecosystem layer in Casper encompasses dApp design and operation."}),"\n",(0,r.jsx)(s.h2,{id:"entry-point",children:"Entry point"}),"\n",(0,r.jsxs)(s.p,{children:["See ",(0,r.jsx)(s.a,{href:"/docs-redux/developers/json-rpc/types_chain#entrypoint",children:"EntryPoint"})," and ",(0,r.jsx)(s.a,{href:"/docs-redux/developers/writing-onchain-code/simple-contract#step-4-defining-the-contract-entry-points",children:"Defining the Contract Entry Points"}),"."]}),"\n",(0,r.jsx)(s.h2,{id:"equivocation",children:"Equivocation"}),"\n",(0,r.jsx)(s.p,{children:"A process where dishonest nodes sign conflicting consensus messages. If a node is caught equivocating, other validators will ignore its messages, and the node will become inactive."}),"\n",(0,r.jsx)(s.h2,{id:"era",children:"Era"}),"\n",(0,r.jsx)(s.p,{children:"A period of time during which the validator set does not change."}),"\n",(0,r.jsxs)(s.p,{children:["In a Casper network, validators cannot join and leave at any point in time, but only at era boundaries. An era's validators are determined using an ",(0,r.jsx)(s.a,{href:"/docs-redux/concepts/glossary/A#auction",children:"auction"}),". At the beginning of the era, the validators create a new instance of the consensus protocol and run this instance until they finalize the era's last block (see ",(0,r.jsx)(s.a,{href:"/docs-redux/concepts/glossary/B#booking-block",children:"booking block"}),")."]}),"\n",(0,r.jsx)(s.h2,{id:"eviction",children:"Eviction"}),"\n",(0,r.jsxs)(s.p,{children:["Validators that fail to participate in ",(0,r.jsx)(s.a,{href:"/docs-redux/concepts/glossary/E#era",children:"era"})," will have their bid deactivated by the protocol, suspending their participation until they signal readiness to resume participation by invoking a method in the ",(0,r.jsx)(s.a,{href:"/docs-redux/concepts/glossary/A#auction-contract",children:"auction contract"}),"."]}),"\n",(0,r.jsx)(s.h2,{id:"external-client",children:"External client"}),"\n",(0,r.jsx)(s.p,{children:"Any hardware/software connecting to a Node for the purpose of sending transactions or querying the state of the blockchain."})]})}function h(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>t,x:()=>i});var r=n(96540);const c={},o=r.createContext(c);function t(e){const s=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:t(e.components),r.createElement(o.Provider,{value:s},e.children)}}}]);